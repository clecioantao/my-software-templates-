apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: simple-python-library
  title: Create simple Python library
  description: Create a simple Python library
    - python
    - library
spec:
  owner: web@example.com
  type: website
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - author
      properties:
        component_id:
          title: Name
          type: string
          description: Name of the library
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: A very simple python library
        author:
          title: Author
          type: string
          description: Author of the library
          # ui:field: OwnerPicker
          # ui:options:
          #   allowedKinds:
          #     - Group
        authorEmail:
          title: Author Email
          type: string
          description: Author email of the library


    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          author: ${{ parameters.author }}
          authorEmail: ${{ parameters.authorEmail }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
